/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * eTickets Platform API
 * The eTickets Platform API documentation
 * OpenAPI spec version: 1.0
 */
import type { Organization } from './organization';
import type { EventResponseDtoLocationType } from './eventResponseDtoLocationType';
import type { EventResponseDtoStatus } from './eventResponseDtoStatus';
import type { EventResponseDtoVisibility } from './eventResponseDtoVisibility';
import type { User } from './user';
import type { TicketType } from './ticketType';

export interface EventResponseDto {
  /** Unique identifier of the event */
  id: string;
  /** Organization ID that owns this event */
  organizationId: string;
  /** Organization that owns this event */
  organization: Organization;
  /** Title of the event */
  title: string;
  /** Full description of the event */
  description: string;
  /** Short description for previews */
  shortDescription?: string;
  /** Category of the event */
  category: string;
  /** Start date of the event */
  startDate: string;
  /** End date of the event */
  endDate: string;
  /** Start time in HH:mm format */
  startTime: string;
  /** End time in HH:mm format */
  endTime: string;
  /** Timezone of the event */
  timeZone: string;
  /** Type of event location */
  locationType: EventResponseDtoLocationType;
  /** Name of the venue */
  venueName?: string;
  /** Physical address of the venue */
  address?: string;
  /** City of the venue */
  city?: string;
  /** State/Province of the venue */
  state?: string;
  /** Postal/ZIP code of the venue */
  zipCode?: string;
  /** Country of the venue */
  country?: string;
  /** URL for virtual events */
  virtualEventUrl?: string;
  /** URL of the featured image */
  featuredImage?: string;
  /** URLs of additional event images */
  galleryImages?: string[];
  /** Current status of the event */
  status: EventResponseDtoStatus;
  /** Visibility setting of the event */
  visibility: EventResponseDtoVisibility;
  /** When the event was created */
  createdAt: string;
  /** When the event was last updated */
  updatedAt: string;
  /** ID of the user who created the event */
  createdBy: string;
  /** ID of the user who last updated the event */
  updatedBy: string;
  /** User who created the event */
  creator: User;
  /** User who last updated the event */
  updater: User;
  /** Available ticket types for this event */
  ticketTypes: TicketType[];
  /** When ticket sales begin */
  salesStartDate?: string;
  /** When ticket sales end */
  salesEndDate?: string;
  /** SEO optimized title */
  seoTitle?: string;
  /** SEO optimized description */
  seoDescription?: string;
  /** Event tags for categorization */
  tags?: string[];
  /** Total number of tickets sold */
  totalTicketsSold: number;
  /** Total revenue from ticket sales */
  totalRevenue: number;
  /** Maximum number of attendees */
  capacity: number;
}
