services:
  # Database Services
  postgres:
    image: postgres:16
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongo:
    image: mongo:latest
    ports:
      - "${MONGO_PORT:-27017}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-example}
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Storage Services
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin}
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Admin Tools
  adminer:
    image: adminer
    ports:
      - "${ADMINER_PORT:-8080}:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DEFAULT_USER: ${DB_USERNAME:-postgres}
    depends_on:
      postgres:
        condition: service_healthy

  # Application Services
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    ports:
      - "${API_PORT:-4000}:${API_PORT:-4000}"
    environment:
      PORT: ${API_PORT:-4000}
      NODE_ENV: ${NODE_ENV:-production}
      DB_TYPE: ${DB_TYPE:-postgres}
      DB_HOST: postgres
      DB_PORT: ${DB_PORT:-5432}
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_NAME: ${DB_NAME:-postgres}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24000}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-7d}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      PLUGIN_SERVER_URL: ${PLUGIN_SERVER_URL:-http://plugins:5000}
      MINIO_ENDPOINT: minio
      MINIO_PORT: ${MINIO_PORT:-9000}
      MINIO_BUCKET: ${MINIO_BUCKET:-plugin-bundles}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-minioadmin}
      PLUGIN_ALLOWED_ORIGINS: ${PLUGIN_ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:5000}
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped

  plugins:
    build:
      context: .
      dockerfile: apps/plugins/Dockerfile
    ports:
      - "${PLUGINS_PORT:-5000}:${PLUGINS_PORT:-5000}"
    environment:
      PORT: ${PLUGINS_PORT:-5000}
      NODE_ENV: ${NODE_ENV:-production}
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-root}:${MONGO_ROOT_PASSWORD:-example}@mongo:27017/${MONGO_PLUGINS_DB:-plugin-server}?authSource=admin
      PLUGIN_SERVER_URL: ${PLUGIN_SERVER_URL:-http://localhost:5000}
      AWS_REGION: ${AWS_REGION:-us-east-1}
      AWS_ACCESS_KEY_ID: ${MINIO_ACCESS_KEY:-minioadmin}
      AWS_SECRET_ACCESS_KEY: ${MINIO_SECRET_KEY:-minioadmin}
      S3_ENDPOINT: http://minio:9000
      S3_PORT: ${MINIO_PORT:-9000}
      S3_USE_SSL: ${S3_USE_SSL:-false}
      PLUGIN_ASSETS_BUCKET: ${PLUGIN_ASSETS_BUCKET:-plugin-bundles}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${PLUGINS_JWT_EXPIRES_IN:-900}
      PLUGIN_ENCRYPTION_KEY: ${PLUGIN_ENCRYPTION_KEY}
      PLUGIN_CONFIG_SECRET: ${PLUGIN_CONFIG_SECRET}
    depends_on:
      mongo:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped

  admin:
    build:
      context: .
      dockerfile: apps/admin/Dockerfile
    ports:
      - "${ADMIN_PORT:-3000}:${ADMIN_PORT:-3000}"
    environment:
      PORT: ${ADMIN_PORT:-3000}
      NODE_ENV: ${NODE_ENV:-production}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:4000}
      JWT_SECRET: ${JWT_SECRET}
      PLUGIN_SERVER_URL: ${PLUGIN_SERVER_URL:-http://localhost:5000}
      BETTER_AUTH_SECRET: ${BETTER_AUTH_SECRET}
      BETTER_AUTH_URL: ${BETTER_AUTH_URL:-http://localhost:3000}
    depends_on:
      - api
      - plugins
    restart: unless-stopped

volumes:
  postgres_data:
  mongo_data:
  minio_data:
