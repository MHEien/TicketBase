/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './app/__root'
import { Route as LogoutRouteImport } from './app/logout'
import { Route as AuthedRouteImport } from './app/_authed'
import { Route as AdminRouteRouteImport } from './app/admin/route'
import { Route as RegisterIndexRouteImport } from './app/register/index'
import { Route as OnboardingIndexRouteImport } from './app/onboarding/index'
import { Route as LoginIndexRouteImport } from './app/login/index'
import { Route as AdminUsersIndexRouteImport } from './app/admin/users/index'
import { Route as AdminSettingsIndexRouteImport } from './app/admin/settings/index'
import { Route as AdminEventsIndexRouteImport } from './app/admin/events/index'
import { Route as AdminDepartmentsIndexRouteImport } from './app/admin/departments/index'
import { Route as AdminCreateEventIndexRouteImport } from './app/admin/create-event/index'
import { Route as AdminUsersIdRouteImport } from './app/admin/users/$id'
import { Route as AdminSettingsPluginsIndexRouteImport } from './app/admin/settings/plugins/index'
import { Route as AdminEventsNewIndexRouteImport } from './app/admin/events/new/index'
import { Route as AdminEventsIdIndexRouteImport } from './app/admin/events/$id/index'
import { Route as AdminDepartmentsNewIndexRouteImport } from './app/admin/departments/new/index'
import { Route as AdminDepartmentsIdIndexRouteImport } from './app/admin/departments/$id/index'
import { Route as AdminSettingsPluginsSubmitIndexRouteImport } from './app/admin/settings/plugins/submit/index'
import { Route as AdminSettingsPluginsIdIndexRouteImport } from './app/admin/settings/plugins/$id/index'
import { Route as AdminEventsIdEditIndexRouteImport } from './app/admin/events/$id/edit/index'

const LogoutRoute = LogoutRouteImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedRoute = AuthedRouteImport.update({
  id: '/_authed',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRouteRoute = AdminRouteRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterIndexRoute = RegisterIndexRouteImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingIndexRoute = OnboardingIndexRouteImport.update({
  id: '/onboarding/',
  path: '/onboarding/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminUsersIndexRoute = AdminUsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminSettingsIndexRoute = AdminSettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminEventsIndexRoute = AdminEventsIndexRouteImport.update({
  id: '/events/',
  path: '/events/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminDepartmentsIndexRoute = AdminDepartmentsIndexRouteImport.update({
  id: '/departments/',
  path: '/departments/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminCreateEventIndexRoute = AdminCreateEventIndexRouteImport.update({
  id: '/create-event/',
  path: '/create-event/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminUsersIdRoute = AdminUsersIdRouteImport.update({
  id: '/users/$id',
  path: '/users/$id',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminSettingsPluginsIndexRoute =
  AdminSettingsPluginsIndexRouteImport.update({
    id: '/settings/plugins/',
    path: '/settings/plugins/',
    getParentRoute: () => AdminRouteRoute,
  } as any)
const AdminEventsNewIndexRoute = AdminEventsNewIndexRouteImport.update({
  id: '/events/new/',
  path: '/events/new/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminEventsIdIndexRoute = AdminEventsIdIndexRouteImport.update({
  id: '/events/$id/',
  path: '/events/$id/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminDepartmentsNewIndexRoute =
  AdminDepartmentsNewIndexRouteImport.update({
    id: '/departments/new/',
    path: '/departments/new/',
    getParentRoute: () => AdminRouteRoute,
  } as any)
const AdminDepartmentsIdIndexRoute = AdminDepartmentsIdIndexRouteImport.update({
  id: '/departments/$id/',
  path: '/departments/$id/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminSettingsPluginsSubmitIndexRoute =
  AdminSettingsPluginsSubmitIndexRouteImport.update({
    id: '/settings/plugins/submit/',
    path: '/settings/plugins/submit/',
    getParentRoute: () => AdminRouteRoute,
  } as any)
const AdminSettingsPluginsIdIndexRoute =
  AdminSettingsPluginsIdIndexRouteImport.update({
    id: '/settings/plugins/$id/',
    path: '/settings/plugins/$id/',
    getParentRoute: () => AdminRouteRoute,
  } as any)
const AdminEventsIdEditIndexRoute = AdminEventsIdEditIndexRouteImport.update({
  id: '/events/$id/edit/',
  path: '/events/$id/edit/',
  getParentRoute: () => AdminRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/admin': typeof AdminRouteRouteWithChildren
  '': typeof AuthedRoute
  '/logout': typeof LogoutRoute
  '/login': typeof LoginIndexRoute
  '/onboarding': typeof OnboardingIndexRoute
  '/register': typeof RegisterIndexRoute
  '/admin/users/$id': typeof AdminUsersIdRoute
  '/admin/create-event': typeof AdminCreateEventIndexRoute
  '/admin/departments': typeof AdminDepartmentsIndexRoute
  '/admin/events': typeof AdminEventsIndexRoute
  '/admin/settings': typeof AdminSettingsIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
  '/admin/departments/$id': typeof AdminDepartmentsIdIndexRoute
  '/admin/departments/new': typeof AdminDepartmentsNewIndexRoute
  '/admin/events/$id': typeof AdminEventsIdIndexRoute
  '/admin/events/new': typeof AdminEventsNewIndexRoute
  '/admin/settings/plugins': typeof AdminSettingsPluginsIndexRoute
  '/admin/events/$id/edit': typeof AdminEventsIdEditIndexRoute
  '/admin/settings/plugins/$id': typeof AdminSettingsPluginsIdIndexRoute
  '/admin/settings/plugins/submit': typeof AdminSettingsPluginsSubmitIndexRoute
}
export interface FileRoutesByTo {
  '/admin': typeof AdminRouteRouteWithChildren
  '': typeof AuthedRoute
  '/logout': typeof LogoutRoute
  '/login': typeof LoginIndexRoute
  '/onboarding': typeof OnboardingIndexRoute
  '/register': typeof RegisterIndexRoute
  '/admin/users/$id': typeof AdminUsersIdRoute
  '/admin/create-event': typeof AdminCreateEventIndexRoute
  '/admin/departments': typeof AdminDepartmentsIndexRoute
  '/admin/events': typeof AdminEventsIndexRoute
  '/admin/settings': typeof AdminSettingsIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
  '/admin/departments/$id': typeof AdminDepartmentsIdIndexRoute
  '/admin/departments/new': typeof AdminDepartmentsNewIndexRoute
  '/admin/events/$id': typeof AdminEventsIdIndexRoute
  '/admin/events/new': typeof AdminEventsNewIndexRoute
  '/admin/settings/plugins': typeof AdminSettingsPluginsIndexRoute
  '/admin/events/$id/edit': typeof AdminEventsIdEditIndexRoute
  '/admin/settings/plugins/$id': typeof AdminSettingsPluginsIdIndexRoute
  '/admin/settings/plugins/submit': typeof AdminSettingsPluginsSubmitIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/admin': typeof AdminRouteRouteWithChildren
  '/_authed': typeof AuthedRoute
  '/logout': typeof LogoutRoute
  '/login/': typeof LoginIndexRoute
  '/onboarding/': typeof OnboardingIndexRoute
  '/register/': typeof RegisterIndexRoute
  '/admin/users/$id': typeof AdminUsersIdRoute
  '/admin/create-event/': typeof AdminCreateEventIndexRoute
  '/admin/departments/': typeof AdminDepartmentsIndexRoute
  '/admin/events/': typeof AdminEventsIndexRoute
  '/admin/settings/': typeof AdminSettingsIndexRoute
  '/admin/users/': typeof AdminUsersIndexRoute
  '/admin/departments/$id/': typeof AdminDepartmentsIdIndexRoute
  '/admin/departments/new/': typeof AdminDepartmentsNewIndexRoute
  '/admin/events/$id/': typeof AdminEventsIdIndexRoute
  '/admin/events/new/': typeof AdminEventsNewIndexRoute
  '/admin/settings/plugins/': typeof AdminSettingsPluginsIndexRoute
  '/admin/events/$id/edit/': typeof AdminEventsIdEditIndexRoute
  '/admin/settings/plugins/$id/': typeof AdminSettingsPluginsIdIndexRoute
  '/admin/settings/plugins/submit/': typeof AdminSettingsPluginsSubmitIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/admin'
    | ''
    | '/logout'
    | '/login'
    | '/onboarding'
    | '/register'
    | '/admin/users/$id'
    | '/admin/create-event'
    | '/admin/departments'
    | '/admin/events'
    | '/admin/settings'
    | '/admin/users'
    | '/admin/departments/$id'
    | '/admin/departments/new'
    | '/admin/events/$id'
    | '/admin/events/new'
    | '/admin/settings/plugins'
    | '/admin/events/$id/edit'
    | '/admin/settings/plugins/$id'
    | '/admin/settings/plugins/submit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/admin'
    | ''
    | '/logout'
    | '/login'
    | '/onboarding'
    | '/register'
    | '/admin/users/$id'
    | '/admin/create-event'
    | '/admin/departments'
    | '/admin/events'
    | '/admin/settings'
    | '/admin/users'
    | '/admin/departments/$id'
    | '/admin/departments/new'
    | '/admin/events/$id'
    | '/admin/events/new'
    | '/admin/settings/plugins'
    | '/admin/events/$id/edit'
    | '/admin/settings/plugins/$id'
    | '/admin/settings/plugins/submit'
  id:
    | '__root__'
    | '/admin'
    | '/_authed'
    | '/logout'
    | '/login/'
    | '/onboarding/'
    | '/register/'
    | '/admin/users/$id'
    | '/admin/create-event/'
    | '/admin/departments/'
    | '/admin/events/'
    | '/admin/settings/'
    | '/admin/users/'
    | '/admin/departments/$id/'
    | '/admin/departments/new/'
    | '/admin/events/$id/'
    | '/admin/events/new/'
    | '/admin/settings/plugins/'
    | '/admin/events/$id/edit/'
    | '/admin/settings/plugins/$id/'
    | '/admin/settings/plugins/submit/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  AuthedRoute: typeof AuthedRoute
  LogoutRoute: typeof LogoutRoute
  LoginIndexRoute: typeof LoginIndexRoute
  OnboardingIndexRoute: typeof OnboardingIndexRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ssr': {
      id: '/ssr'
      path: ''
      fullPath: '/ssr'
      preLoaderRoute: unknown
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/layout': {
      id: '/onboarding/layout'
      path: ''
      fullPath: '/onboarding/layout'
      preLoaderRoute: unknown
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: ''
      fullPath: '/admin'
      preLoaderRoute: unknown
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/': {
      id: '/onboarding/'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/organizations/branding': {
      id: '/api/organizations/branding'
      path: ''
      fullPath: '/api/organizations/branding'
      preLoaderRoute: unknown
      parentRoute: typeof rootRouteImport
    }
    '/api/organizations/domain': {
      id: '/api/organizations/domain'
      path: ''
      fullPath: '/api/organizations/domain'
      preLoaderRoute: unknown
      parentRoute: typeof rootRouteImport
    }
    '/api/organizations/settings': {
      id: '/api/organizations/settings'
      path: ''
      fullPath: '/api/organizations/settings'
      preLoaderRoute: unknown
      parentRoute: typeof rootRouteImport
    }
    '/admin/events/loading': {
      id: '/admin/events/loading'
      path: ''
      fullPath: '/admin/events/loading'
      preLoaderRoute: unknown
      parentRoute: typeof rootRouteImport
    }
    '/admin/users/$id': {
      id: '/admin/users/$id'
      path: '/users/$id'
      fullPath: '/admin/users/$id'
      preLoaderRoute: typeof AdminUsersIdRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/users/loading': {
      id: '/admin/users/loading'
      path: ''
      fullPath: '/admin/users/loading'
      preLoaderRoute: unknown
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/steps/brand-settings': {
      id: '/onboarding/steps/brand-settings'
      path: ''
      fullPath: '/onboarding/steps/brand-settings'
      preLoaderRoute: unknown
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/steps/event-preferences': {
      id: '/onboarding/steps/event-preferences'
      path: ''
      fullPath: '/onboarding/steps/event-preferences'
      preLoaderRoute: unknown
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/steps/onboarding-complete': {
      id: '/onboarding/steps/onboarding-complete'
      path: ''
      fullPath: '/onboarding/steps/onboarding-complete'
      preLoaderRoute: unknown
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/steps/organization-details': {
      id: '/onboarding/steps/organization-details'
      path: ''
      fullPath: '/onboarding/steps/organization-details'
      preLoaderRoute: unknown
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/steps/payment-details': {
      id: '/onboarding/steps/payment-details'
      path: ''
      fullPath: '/onboarding/steps/payment-details'
      preLoaderRoute: unknown
      parentRoute: typeof rootRouteImport
    }
    '/admin/create-event/': {
      id: '/admin/create-event/'
      path: '/create-event'
      fullPath: '/admin/create-event'
      preLoaderRoute: typeof AdminCreateEventIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/departments/': {
      id: '/admin/departments/'
      path: '/departments'
      fullPath: '/admin/departments'
      preLoaderRoute: typeof AdminDepartmentsIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/events/': {
      id: '/admin/events/'
      path: '/events'
      fullPath: '/admin/events'
      preLoaderRoute: typeof AdminEventsIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/settings/': {
      id: '/admin/settings/'
      path: '/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AdminSettingsIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/users/': {
      id: '/admin/users/'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/settings/plugins/page': {
      id: '/admin/settings/plugins/page'
      path: ''
      fullPath: '/admin/settings/plugins/page'
      preLoaderRoute: unknown
      parentRoute: typeof rootRouteImport
    }
    '/admin/departments/$id/': {
      id: '/admin/departments/$id/'
      path: '/departments/$id'
      fullPath: '/admin/departments/$id'
      preLoaderRoute: typeof AdminDepartmentsIdIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/departments/new/': {
      id: '/admin/departments/new/'
      path: '/departments/new'
      fullPath: '/admin/departments/new'
      preLoaderRoute: typeof AdminDepartmentsNewIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/events/$id/': {
      id: '/admin/events/$id/'
      path: '/events/$id'
      fullPath: '/admin/events/$id'
      preLoaderRoute: typeof AdminEventsIdIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/events/new/': {
      id: '/admin/events/new/'
      path: '/events/new'
      fullPath: '/admin/events/new'
      preLoaderRoute: typeof AdminEventsNewIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/settings/plugins/': {
      id: '/admin/settings/plugins/'
      path: '/settings/plugins'
      fullPath: '/admin/settings/plugins'
      preLoaderRoute: typeof AdminSettingsPluginsIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/events/$id/edit/': {
      id: '/admin/events/$id/edit/'
      path: '/events/$id/edit'
      fullPath: '/admin/events/$id/edit'
      preLoaderRoute: typeof AdminEventsIdEditIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/settings/plugins/$id/': {
      id: '/admin/settings/plugins/$id/'
      path: '/settings/plugins/$id'
      fullPath: '/admin/settings/plugins/$id'
      preLoaderRoute: typeof AdminSettingsPluginsIdIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/settings/plugins/submit/': {
      id: '/admin/settings/plugins/submit/'
      path: '/settings/plugins/submit'
      fullPath: '/admin/settings/plugins/submit'
      preLoaderRoute: typeof AdminSettingsPluginsSubmitIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
  }
}

interface AdminRouteRouteChildren {
  AdminUsersIdRoute: typeof AdminUsersIdRoute
  AdminCreateEventIndexRoute: typeof AdminCreateEventIndexRoute
  AdminDepartmentsIndexRoute: typeof AdminDepartmentsIndexRoute
  AdminEventsIndexRoute: typeof AdminEventsIndexRoute
  AdminSettingsIndexRoute: typeof AdminSettingsIndexRoute
  AdminUsersIndexRoute: typeof AdminUsersIndexRoute
  AdminDepartmentsIdIndexRoute: typeof AdminDepartmentsIdIndexRoute
  AdminDepartmentsNewIndexRoute: typeof AdminDepartmentsNewIndexRoute
  AdminEventsIdIndexRoute: typeof AdminEventsIdIndexRoute
  AdminEventsNewIndexRoute: typeof AdminEventsNewIndexRoute
  AdminSettingsPluginsIndexRoute: typeof AdminSettingsPluginsIndexRoute
  AdminEventsIdEditIndexRoute: typeof AdminEventsIdEditIndexRoute
  AdminSettingsPluginsIdIndexRoute: typeof AdminSettingsPluginsIdIndexRoute
  AdminSettingsPluginsSubmitIndexRoute: typeof AdminSettingsPluginsSubmitIndexRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminUsersIdRoute: AdminUsersIdRoute,
  AdminCreateEventIndexRoute: AdminCreateEventIndexRoute,
  AdminDepartmentsIndexRoute: AdminDepartmentsIndexRoute,
  AdminEventsIndexRoute: AdminEventsIndexRoute,
  AdminSettingsIndexRoute: AdminSettingsIndexRoute,
  AdminUsersIndexRoute: AdminUsersIndexRoute,
  AdminDepartmentsIdIndexRoute: AdminDepartmentsIdIndexRoute,
  AdminDepartmentsNewIndexRoute: AdminDepartmentsNewIndexRoute,
  AdminEventsIdIndexRoute: AdminEventsIdIndexRoute,
  AdminEventsNewIndexRoute: AdminEventsNewIndexRoute,
  AdminSettingsPluginsIndexRoute: AdminSettingsPluginsIndexRoute,
  AdminEventsIdEditIndexRoute: AdminEventsIdEditIndexRoute,
  AdminSettingsPluginsIdIndexRoute: AdminSettingsPluginsIdIndexRoute,
  AdminSettingsPluginsSubmitIndexRoute: AdminSettingsPluginsSubmitIndexRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AdminRouteRoute: AdminRouteRouteWithChildren,
  AuthedRoute: AuthedRoute,
  LogoutRoute: LogoutRoute,
  LoginIndexRoute: LoginIndexRoute,
  OnboardingIndexRoute: OnboardingIndexRoute,
  RegisterIndexRoute: RegisterIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
